name: Tests

on:
  push:
    branches: [ master ]
    paths-ignore:
      - 'LICENSE.*'
      - 'README.*'
      - '.github/ISSUE-TEMPLATE/**'
      - 'docs/**'
      - '.hgignore'
      - '.gitignore'

  pull_request:
    branches: [ master ]
    paths-ignore:
      - 'LICENSE.*'
      - 'README.*'
      - '.github/ISSUE-TEMPLATE/**'
      - 'docs/**'
      - '.hgignore'
      - '.gitignore'

  schedule:  # at 03:07 on day-of-month 7
    - cron: '7 3 7 * *'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13', 'pypy-3.9']

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Windows-only dependencies
      run: |
        $env:PATH = "C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\ProgramData\chocolatey\bin"
        [Environment]::SetEnvironmentVariable("Path", $env:PATH, "Machine")
        choco install gnupg
        echo "C:\Program Files (x86)\GnuPG\bin" >> $env:GITHUB_PATH
      if: ${{ matrix.os == 'windows-latest' }}
    - name: Test with unittest
      run: |
        gpg --version
        python test_gnupg.py -v
      env:
        NO_EXTERNAL_TESTS: 1
    - name: Report failure info
      if: ${{ failure() }}
      run: |
        cat test_gnupg.log
    - name: Test with coverage
      run: |
        pip install coverage
        coverage run --branch test_gnupg.py
        coverage xml
      env:
        NO_EXTERNAL_TESTS: 1
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        flags: unittests
        files: coverage.xml
